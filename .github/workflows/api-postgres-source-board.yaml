name: api-postgres-source-board

concurrency: production

env:
  AZURE_CONTAINER_APP_NAME_RESOURCE_GROUP: diesel-kpjttpihfhbcm-rg
  AZURE_CONTAINER_APP_NAME: dfb-diesel-ca-kpjttpihfhbcm
  AZURE_REGISTRY: dfbdieselkpjttpihfhbcmregistry
  IMAGE_NAME: api-postgres-source-board
  APPNAME: api-postgres-source-board

on:
  # Automatically trigger it when detected changes in repo. Remove comments to enable
  #push:
  #  branches: 
  #    [ main ]

  # Allow mannually trigger 
  workflow_dispatch:    


permissions:
  id-token: write
  contents: read

jobs:
  build-to-registry:
    runs-on: ubuntu-latest

    steps:
    #   - name: Checkout to the branch
    #     uses: actions/checkout@v2

      - name: Print out app version
        run: |
          VERSION=$(grep '^version' "${{ env.APPNAME }}/Cargo.toml" | sed -E 's/version = "(.*)"/\1/')
          echo "APP_VERSION=${VERSION}" >>${GITHUB_ENV}
          echo "GH SHA=${GITHUB_SHA}"
          echo "REPO_NAME=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.AZURE_CONTAINER_REGISTRY_USERNAME }}
          password: ${{ secrets.AZURE_CONTAINER_REGISTRY_PASSWORD }}

      # Push build cache to registry along with image (different tags)
      - name: Build and push to registry
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: |
            ${{ secrets.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          file: ./crates/${{ env.APPNAME }}/Dockerfile

  deploy-from-registry:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to containerapp
        uses: azure/cli@v2
        with:
          inlineScript: |
            az config set extension.use_dynamic_install=yes_without_prompt
            az containerapp registry set -n ${{ env.AZURE_CONTAINER_APP_NAME }} -g ${{ env.AZURE_CONTAINER_APP_NAME_RESOURCE_GROUP }} --server ${{ secrets.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER }} --username ${{ secrets.AZURE_CONTAINER_REGISTRY_USERNAME }} --password ${{ secrets.AZURE_CONTAINER_REGISTRY_PASSWORD }}
            az containerapp update -n ${{ env.AZURE_CONTAINER_APP_NAME }} -g ${{ env.AZURE_CONTAINER_APP_NAME_RESOURCE_GROUP }} --image ${{ secrets.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}