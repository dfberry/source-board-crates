name: build-and-deploy

env:
  AZURE_RESOURCE_GROUP_NAME: rg-postgres-api
  AZURE_CONTAINER_APP_NAME: api
  AZURE_CONTAINER_REGISTRY: crnsxqg7ibsurvu
  IMAGE: rust-server-api-postgres

on:
  # Automatically trigger it when detected changes in repo. Remove comments to enable
  #push:
  #  branches: 
  #    [ main ]

  # Allow mannually trigger 
  workflow_dispatch:   

permissions:
  id-token: write
  contents: read

defaults:
  run:
    working-directory: ./crates/api-postgres-source-board


jobs:
  build:
    runs-on: ubuntu-latest

    steps:

      # - name: Check for empty environment variables
      #   run: |
      #     if [ -z "${{ env.AZURE_CONTAINER_APP_NAME }}" ] || [ -z "${{ env.AZURE_RESOURCE_GROUP_NAME }}" ] || [ -z "${{ env.AZURE_CONTAINER_REGISTRY }}" ] || [ -z "${{ env.IMAGE }}" ]; then
      #       echo "One or more required environment variables are empty. Exiting."
      #       exit 1
      #     fi

      - name: Checkout to the branch
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            .github
            crates/api-postgres-source-board

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v2
        with:
          login-server: ${{ secrets.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.AZURE_CONTAINER_REGISTRY_USERNAME }}
          password: ${{ secrets.AZURE_CONTAINER_REGISTRY_PASSWORD }}

      # - name: Verify Docker login
      #   run: docker info

      # Push build cache to registry along with image (different tags)
      - name: Build and push container image to Azure Container Registry
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: |
            ${{ secrets.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE }}:${{ github.sha }}
          file: ./Dockerfile

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to containerapp
        uses: azure/cli@v2
        with:
          inlineScript: |
            az config set extension.use_dynamic_install=yes_without_prompt
            az containerapp registry set -n ${{ env.AZURE_CONTAINER_APP_NAME }} -g ${{ env.AZURE_RESOURCE_GROUP_NAME }} --server ${{ secrets.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER }} --username ${{ secrets.AZURE_CONTAINER_REGISTRY_USERNAME }} --password ${{ secrets.AZURE_CONTAINER_REGISTRY_PASSWORD }}
            az containerapp update -n ${{ env.AZURE_CONTAINER_APP_NAME }} -g ${{ env.AZURE_RESOURCE_GROUP_NAME }} --image ${{ secrets.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE }}:${{ github.sha }}